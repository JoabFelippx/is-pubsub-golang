// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: is/utils/robot/robot.proto

package is_robot

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	common "rabbit_ingo/is/utils/common"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RangeScan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Angles []float32 `protobuf:"fixed32,1,rep,packed,name=angles,proto3" json:"angles,omitempty"`
	Ranges []float32 `protobuf:"fixed32,2,rep,packed,name=ranges,proto3" json:"ranges,omitempty"`
}

func (x *RangeScan) Reset() {
	*x = RangeScan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_is_utils_robot_robot_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RangeScan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RangeScan) ProtoMessage() {}

func (x *RangeScan) ProtoReflect() protoreflect.Message {
	mi := &file_is_utils_robot_robot_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RangeScan.ProtoReflect.Descriptor instead.
func (*RangeScan) Descriptor() ([]byte, []int) {
	return file_is_utils_robot_robot_proto_rawDescGZIP(), []int{0}
}

func (x *RangeScan) GetAngles() []float32 {
	if x != nil {
		return x.Angles
	}
	return nil
}

func (x *RangeScan) GetRanges() []float32 {
	if x != nil {
		return x.Ranges
	}
	return nil
}

type RobotConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Speed *common.Speed `protobuf:"bytes,1,opt,name=speed,proto3" json:"speed,omitempty"`
}

func (x *RobotConfig) Reset() {
	*x = RobotConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_is_utils_robot_robot_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RobotConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RobotConfig) ProtoMessage() {}

func (x *RobotConfig) ProtoReflect() protoreflect.Message {
	mi := &file_is_utils_robot_robot_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RobotConfig.ProtoReflect.Descriptor instead.
func (*RobotConfig) Descriptor() ([]byte, []int) {
	return file_is_utils_robot_robot_proto_rawDescGZIP(), []int{1}
}

func (x *RobotConfig) GetSpeed() *common.Speed {
	if x != nil {
		return x.Speed
	}
	return nil
}

type BasicMoveTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// (Optional) List of positions indicating the desired path.
	Positions []*common.Position `protobuf:"bytes,1,rep,name=positions,proto3" json:"positions,omitempty"`
	// (Optional) List of speeds to be executed at each respective position of a
	// trajectory. If present, should have the same size as the positions field.
	Speeds []*common.Speed `protobuf:"bytes,2,rep,name=speeds,proto3" json:"speeds,omitempty"`
	// (Optional) Desired orientation of the robot after finishing the task.
	FinalOrientation *common.Orientation `protobuf:"bytes,3,opt,name=final_orientation,json=finalOrientation,proto3" json:"final_orientation,omitempty"`
	// (Required) Error value where the controller can consider that the point was
	// reached successfully.
	AllowedError float32 `protobuf:"fixed32,4,opt,name=allowed_error,json=allowedError,proto3" json:"allowed_error,omitempty"`
	// (Required) Controller loop frequency in hertz.
	Rate float32 `protobuf:"fixed32,5,opt,name=rate,proto3" json:"rate,omitempty"`
}

func (x *BasicMoveTask) Reset() {
	*x = BasicMoveTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_is_utils_robot_robot_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasicMoveTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasicMoveTask) ProtoMessage() {}

func (x *BasicMoveTask) ProtoReflect() protoreflect.Message {
	mi := &file_is_utils_robot_robot_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasicMoveTask.ProtoReflect.Descriptor instead.
func (*BasicMoveTask) Descriptor() ([]byte, []int) {
	return file_is_utils_robot_robot_proto_rawDescGZIP(), []int{2}
}

func (x *BasicMoveTask) GetPositions() []*common.Position {
	if x != nil {
		return x.Positions
	}
	return nil
}

func (x *BasicMoveTask) GetSpeeds() []*common.Speed {
	if x != nil {
		return x.Speeds
	}
	return nil
}

func (x *BasicMoveTask) GetFinalOrientation() *common.Orientation {
	if x != nil {
		return x.FinalOrientation
	}
	return nil
}

func (x *BasicMoveTask) GetAllowedError() float32 {
	if x != nil {
		return x.AllowedError
	}
	return 0
}

func (x *BasicMoveTask) GetRate() float32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

type RobotTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// (Optional) Task id, if none is provided one will be generated.
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are assignable to Task:
	//	*RobotTaskRequest_BasicMoveTask
	Task isRobotTaskRequest_Task `protobuf_oneof:"Task"`
}

func (x *RobotTaskRequest) Reset() {
	*x = RobotTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_is_utils_robot_robot_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RobotTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RobotTaskRequest) ProtoMessage() {}

func (x *RobotTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_is_utils_robot_robot_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RobotTaskRequest.ProtoReflect.Descriptor instead.
func (*RobotTaskRequest) Descriptor() ([]byte, []int) {
	return file_is_utils_robot_robot_proto_rawDescGZIP(), []int{3}
}

func (x *RobotTaskRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (m *RobotTaskRequest) GetTask() isRobotTaskRequest_Task {
	if m != nil {
		return m.Task
	}
	return nil
}

func (x *RobotTaskRequest) GetBasicMoveTask() *BasicMoveTask {
	if x, ok := x.GetTask().(*RobotTaskRequest_BasicMoveTask); ok {
		return x.BasicMoveTask
	}
	return nil
}

type isRobotTaskRequest_Task interface {
	isRobotTaskRequest_Task()
}

type RobotTaskRequest_BasicMoveTask struct {
	BasicMoveTask *BasicMoveTask `protobuf:"bytes,2,opt,name=basic_move_task,json=basicMoveTask,proto3,oneof"`
}

func (*RobotTaskRequest_BasicMoveTask) isRobotTaskRequest_Task() {}

type RobotTaskReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique identifier of the task.
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RobotTaskReply) Reset() {
	*x = RobotTaskReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_is_utils_robot_robot_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RobotTaskReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RobotTaskReply) ProtoMessage() {}

func (x *RobotTaskReply) ProtoReflect() protoreflect.Message {
	mi := &file_is_utils_robot_robot_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RobotTaskReply.ProtoReflect.Descriptor instead.
func (*RobotTaskReply) Descriptor() ([]byte, []int) {
	return file_is_utils_robot_robot_proto_rawDescGZIP(), []int{4}
}

func (x *RobotTaskReply) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RobotControllerProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique identifier of the task.
	Id uint64 `protobuf:"varint,9,opt,name=id,proto3" json:"id,omitempty"`
	// Speed command sent to the robot in order to make the current pose equals to
	// the desired one.
	CurrentSpeed *common.Speed `protobuf:"bytes,1,opt,name=current_speed,json=currentSpeed,proto3" json:"current_speed,omitempty"`
	// Pose where the robot actually is.
	CurrentPose *common.Pose `protobuf:"bytes,2,opt,name=current_pose,json=currentPose,proto3" json:"current_pose,omitempty"`
	// Pose where the robot should be now.
	DesiredPose *common.Pose `protobuf:"bytes,3,opt,name=desired_pose,json=desiredPose,proto3" json:"desired_pose,omitempty"`
	// Robot positioning error for the current task.
	Error float32 `protobuf:"fixed32,4,opt,name=error,proto3" json:"error,omitempty"`
	// Percentage indicating how much of the task has been completed yet.
	Completion float32 `protobuf:"fixed32,5,opt,name=completion,proto3" json:"completion,omitempty"`
	// Sources used to locate the robot.
	Sources []string `protobuf:"bytes,6,rep,name=sources,proto3" json:"sources,omitempty"`
	// Timestamp of when the task started.
	Begin *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=begin,proto3" json:"begin,omitempty"`
	// Timestamp of when the task finished.
	End *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *RobotControllerProgress) Reset() {
	*x = RobotControllerProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_is_utils_robot_robot_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RobotControllerProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RobotControllerProgress) ProtoMessage() {}

func (x *RobotControllerProgress) ProtoReflect() protoreflect.Message {
	mi := &file_is_utils_robot_robot_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RobotControllerProgress.ProtoReflect.Descriptor instead.
func (*RobotControllerProgress) Descriptor() ([]byte, []int) {
	return file_is_utils_robot_robot_proto_rawDescGZIP(), []int{5}
}

func (x *RobotControllerProgress) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RobotControllerProgress) GetCurrentSpeed() *common.Speed {
	if x != nil {
		return x.CurrentSpeed
	}
	return nil
}

func (x *RobotControllerProgress) GetCurrentPose() *common.Pose {
	if x != nil {
		return x.CurrentPose
	}
	return nil
}

func (x *RobotControllerProgress) GetDesiredPose() *common.Pose {
	if x != nil {
		return x.DesiredPose
	}
	return nil
}

func (x *RobotControllerProgress) GetError() float32 {
	if x != nil {
		return x.Error
	}
	return 0
}

func (x *RobotControllerProgress) GetCompletion() float32 {
	if x != nil {
		return x.Completion
	}
	return 0
}

func (x *RobotControllerProgress) GetSources() []string {
	if x != nil {
		return x.Sources
	}
	return nil
}

func (x *RobotControllerProgress) GetBegin() *timestamppb.Timestamp {
	if x != nil {
		return x.Begin
	}
	return nil
}

func (x *RobotControllerProgress) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

type PathRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique identifier of the request.
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Destination pose.
	DestinationPose *common.Pose `protobuf:"bytes,2,opt,name=destination_pose,json=destinationPose,proto3" json:"destination_pose,omitempty"`
	// Robot Gateway ID.
	RobotGatewayId uint64 `protobuf:"varint,3,opt,name=robot_gateway_id,json=robotGatewayId,proto3" json:"robot_gateway_id,omitempty"`
	// Robot Task Rate.
	Rate float32 `protobuf:"fixed32,4,opt,name=rate,proto3" json:"rate,omitempty"`
	// Robot Task Allowed Error.
	AllowedError float32 `protobuf:"fixed32,5,opt,name=allowed_error,json=allowedError,proto3" json:"allowed_error,omitempty"`
}

func (x *PathRequest) Reset() {
	*x = PathRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_is_utils_robot_robot_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PathRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PathRequest) ProtoMessage() {}

func (x *PathRequest) ProtoReflect() protoreflect.Message {
	mi := &file_is_utils_robot_robot_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PathRequest.ProtoReflect.Descriptor instead.
func (*PathRequest) Descriptor() ([]byte, []int) {
	return file_is_utils_robot_robot_proto_rawDescGZIP(), []int{6}
}

func (x *PathRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PathRequest) GetDestinationPose() *common.Pose {
	if x != nil {
		return x.DestinationPose
	}
	return nil
}

func (x *PathRequest) GetRobotGatewayId() uint64 {
	if x != nil {
		return x.RobotGatewayId
	}
	return 0
}

func (x *PathRequest) GetRate() float32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *PathRequest) GetAllowedError() float32 {
	if x != nil {
		return x.AllowedError
	}
	return 0
}

var File_is_utils_robot_robot_proto protoreflect.FileDescriptor

var file_is_utils_robot_robot_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x69, 0x73, 0x2f, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2f, 0x72, 0x6f, 0x62, 0x6f, 0x74,
	0x2f, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x69, 0x73,
	0x2e, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x1a, 0x1c, 0x69, 0x73, 0x2f, 0x75, 0x74, 0x69, 0x6c, 0x73,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3b, 0x0a, 0x09, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x63,
	0x61, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x02, 0x52, 0x06, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x02, 0x52, 0x06, 0x72, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x22, 0x35, 0x0a, 0x0b, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x26, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x70, 0x65,
	0x65, 0x64, 0x52, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x22, 0xea, 0x01, 0x0a, 0x0d, 0x42, 0x61,
	0x73, 0x69, 0x63, 0x4d, 0x6f, 0x76, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x31, 0x0a, 0x09, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x28,
	0x0a, 0x06, 0x73, 0x70, 0x65, 0x65, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x70, 0x65, 0x65, 0x64,
	0x52, 0x06, 0x73, 0x70, 0x65, 0x65, 0x64, 0x73, 0x12, 0x43, 0x0a, 0x11, 0x66, 0x69, 0x6e, 0x61,
	0x6c, 0x5f, 0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x4f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x66, 0x69, 0x6e,
	0x61, 0x6c, 0x4f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a,
	0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x22, 0x6d, 0x0a, 0x10, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x41, 0x0a, 0x0f, 0x62, 0x61,
	0x73, 0x69, 0x63, 0x5f, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x69, 0x73, 0x2e, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x2e, 0x42,
	0x61, 0x73, 0x69, 0x63, 0x4d, 0x6f, 0x76, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x48, 0x00, 0x52, 0x0d,
	0x62, 0x61, 0x73, 0x69, 0x63, 0x4d, 0x6f, 0x76, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x06, 0x0a,
	0x04, 0x54, 0x61, 0x73, 0x6b, 0x22, 0x20, 0x0a, 0x0e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0xf8, 0x02, 0x0a, 0x17, 0x52, 0x6f, 0x62, 0x6f,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x35, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x70, 0x65, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x69, 0x73, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x70, 0x65, 0x65, 0x64, 0x52, 0x0c, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x0c, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x73,
	0x65, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x73, 0x65, 0x12, 0x32,
	0x0a, 0x0c, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x70, 0x6f, 0x73, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x50, 0x6f, 0x73, 0x65, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x50, 0x6f,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x12, 0x30, 0x0a, 0x05, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x62,
	0x65, 0x67, 0x69, 0x6e, 0x12, 0x2c, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x65,
	0x6e, 0x64, 0x22, 0xbc, 0x01, 0x0a, 0x0b, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x3a, 0x0a, 0x10, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x70, 0x6f, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x69,
	0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x73, 0x65, 0x52, 0x0f, 0x64,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x73, 0x65, 0x12, 0x28,
	0x0a, 0x10, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x47,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0c, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_is_utils_robot_robot_proto_rawDescOnce sync.Once
	file_is_utils_robot_robot_proto_rawDescData = file_is_utils_robot_robot_proto_rawDesc
)

func file_is_utils_robot_robot_proto_rawDescGZIP() []byte {
	file_is_utils_robot_robot_proto_rawDescOnce.Do(func() {
		file_is_utils_robot_robot_proto_rawDescData = protoimpl.X.CompressGZIP(file_is_utils_robot_robot_proto_rawDescData)
	})
	return file_is_utils_robot_robot_proto_rawDescData
}

var file_is_utils_robot_robot_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_is_utils_robot_robot_proto_goTypes = []interface{}{
	(*RangeScan)(nil),               // 0: is.robot.RangeScan
	(*RobotConfig)(nil),             // 1: is.robot.RobotConfig
	(*BasicMoveTask)(nil),           // 2: is.robot.BasicMoveTask
	(*RobotTaskRequest)(nil),        // 3: is.robot.RobotTaskRequest
	(*RobotTaskReply)(nil),          // 4: is.robot.RobotTaskReply
	(*RobotControllerProgress)(nil), // 5: is.robot.RobotControllerProgress
	(*PathRequest)(nil),             // 6: is.robot.PathRequest
	(*common.Speed)(nil),            // 7: is.common.Speed
	(*common.Position)(nil),         // 8: is.common.Position
	(*common.Orientation)(nil),      // 9: is.common.Orientation
	(*common.Pose)(nil),             // 10: is.common.Pose
	(*timestamppb.Timestamp)(nil),   // 11: google.protobuf.Timestamp
}
var file_is_utils_robot_robot_proto_depIdxs = []int32{
	7,  // 0: is.robot.RobotConfig.speed:type_name -> is.common.Speed
	8,  // 1: is.robot.BasicMoveTask.positions:type_name -> is.common.Position
	7,  // 2: is.robot.BasicMoveTask.speeds:type_name -> is.common.Speed
	9,  // 3: is.robot.BasicMoveTask.final_orientation:type_name -> is.common.Orientation
	2,  // 4: is.robot.RobotTaskRequest.basic_move_task:type_name -> is.robot.BasicMoveTask
	7,  // 5: is.robot.RobotControllerProgress.current_speed:type_name -> is.common.Speed
	10, // 6: is.robot.RobotControllerProgress.current_pose:type_name -> is.common.Pose
	10, // 7: is.robot.RobotControllerProgress.desired_pose:type_name -> is.common.Pose
	11, // 8: is.robot.RobotControllerProgress.begin:type_name -> google.protobuf.Timestamp
	11, // 9: is.robot.RobotControllerProgress.end:type_name -> google.protobuf.Timestamp
	10, // 10: is.robot.PathRequest.destination_pose:type_name -> is.common.Pose
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_is_utils_robot_robot_proto_init() }
func file_is_utils_robot_robot_proto_init() {
	if File_is_utils_robot_robot_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_is_utils_robot_robot_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RangeScan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_is_utils_robot_robot_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RobotConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_is_utils_robot_robot_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasicMoveTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_is_utils_robot_robot_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RobotTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_is_utils_robot_robot_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RobotTaskReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_is_utils_robot_robot_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RobotControllerProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_is_utils_robot_robot_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PathRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_is_utils_robot_robot_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*RobotTaskRequest_BasicMoveTask)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_is_utils_robot_robot_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_is_utils_robot_robot_proto_goTypes,
		DependencyIndexes: file_is_utils_robot_robot_proto_depIdxs,
		MessageInfos:      file_is_utils_robot_robot_proto_msgTypes,
	}.Build()
	File_is_utils_robot_robot_proto = out.File
	file_is_utils_robot_robot_proto_rawDesc = nil
	file_is_utils_robot_robot_proto_goTypes = nil
	file_is_utils_robot_robot_proto_depIdxs = nil
}
