// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: is/utils/common/common.proto

package is_common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DataType int32

const (
	DataType_UNKNOWN_TYPE DataType = 0
	DataType_FLOAT_TYPE   DataType = 1
	DataType_DOUBLE_TYPE  DataType = 2
	DataType_INT32_TYPE   DataType = 3
	DataType_INT64_TYPE   DataType = 4
)

// Enum value maps for DataType.
var (
	DataType_name = map[int32]string{
		0: "UNKNOWN_TYPE",
		1: "FLOAT_TYPE",
		2: "DOUBLE_TYPE",
		3: "INT32_TYPE",
		4: "INT64_TYPE",
	}
	DataType_value = map[string]int32{
		"UNKNOWN_TYPE": 0,
		"FLOAT_TYPE":   1,
		"DOUBLE_TYPE":  2,
		"INT32_TYPE":   3,
		"INT64_TYPE":   4,
	}
)

func (x DataType) Enum() *DataType {
	p := new(DataType)
	*p = x
	return p
}

func (x DataType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataType) Descriptor() protoreflect.EnumDescriptor {
	return file_is_utils_common_common_proto_enumTypes[0].Descriptor()
}

func (DataType) Type() protoreflect.EnumType {
	return &file_is_utils_common_common_proto_enumTypes[0]
}

func (x DataType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataType.Descriptor instead.
func (DataType) EnumDescriptor() ([]byte, []int) {
	return file_is_utils_common_common_proto_rawDescGZIP(), []int{0}
}

type SamplingSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Sampling frequency in hertz.
	Frequency *wrapperspb.FloatValue `protobuf:"bytes,1,opt,name=frequency,proto3" json:"frequency,omitempty"`
	// Delay to be applied in the in the sampling proccess, normally used to
	//synchronize different sources.
	Delay *wrapperspb.FloatValue `protobuf:"bytes,2,opt,name=delay,proto3" json:"delay,omitempty"`
}

func (x *SamplingSettings) Reset() {
	*x = SamplingSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_is_utils_common_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SamplingSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SamplingSettings) ProtoMessage() {}

func (x *SamplingSettings) ProtoReflect() protoreflect.Message {
	mi := &file_is_utils_common_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SamplingSettings.ProtoReflect.Descriptor instead.
func (*SamplingSettings) Descriptor() ([]byte, []int) {
	return file_is_utils_common_common_proto_rawDescGZIP(), []int{0}
}

func (x *SamplingSettings) GetFrequency() *wrapperspb.FloatValue {
	if x != nil {
		return x.Frequency
	}
	return nil
}

func (x *SamplingSettings) GetDelay() *wrapperspb.FloatValue {
	if x != nil {
		return x.Delay
	}
	return nil
}

type SyncRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entities []string          `protobuf:"bytes,1,rep,name=entities,proto3" json:"entities,omitempty"`
	Sampling *SamplingSettings `protobuf:"bytes,2,opt,name=sampling,proto3" json:"sampling,omitempty"`
}

func (x *SyncRequest) Reset() {
	*x = SyncRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_is_utils_common_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncRequest) ProtoMessage() {}

func (x *SyncRequest) ProtoReflect() protoreflect.Message {
	mi := &file_is_utils_common_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncRequest.ProtoReflect.Descriptor instead.
func (*SyncRequest) Descriptor() ([]byte, []int) {
	return file_is_utils_common_common_proto_rawDescGZIP(), []int{1}
}

func (x *SyncRequest) GetEntities() []string {
	if x != nil {
		return x.Entities
	}
	return nil
}

func (x *SyncRequest) GetSampling() *SamplingSettings {
	if x != nil {
		return x.Sampling
	}
	return nil
}

// Used to select the desired fields of a message on a "Get" RPC.
type FieldSelector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of fields that should be filled.
	Fields []uint32 `protobuf:"varint,1,rep,packed,name=fields,proto3" json:"fields,omitempty"`
}

func (x *FieldSelector) Reset() {
	*x = FieldSelector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_is_utils_common_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldSelector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldSelector) ProtoMessage() {}

func (x *FieldSelector) ProtoReflect() protoreflect.Message {
	mi := &file_is_utils_common_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldSelector.ProtoReflect.Descriptor instead.
func (*FieldSelector) Descriptor() ([]byte, []int) {
	return file_is_utils_common_common_proto_rawDescGZIP(), []int{2}
}

func (x *FieldSelector) GetFields() []uint32 {
	if x != nil {
		return x.Fields
	}
	return nil
}

type Shape struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dims []*Shape_Dimension `protobuf:"bytes,1,rep,name=dims,proto3" json:"dims,omitempty"`
}

func (x *Shape) Reset() {
	*x = Shape{}
	if protoimpl.UnsafeEnabled {
		mi := &file_is_utils_common_common_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Shape) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Shape) ProtoMessage() {}

func (x *Shape) ProtoReflect() protoreflect.Message {
	mi := &file_is_utils_common_common_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Shape.ProtoReflect.Descriptor instead.
func (*Shape) Descriptor() ([]byte, []int) {
	return file_is_utils_common_common_proto_rawDescGZIP(), []int{3}
}

func (x *Shape) GetDims() []*Shape_Dimension {
	if x != nil {
		return x.Dims
	}
	return nil
}

type Tensor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Shape of the tensor. Define how the tensor is represented in one of the value
	//fields (floats, doubles, ints32, ints64).
	Shape *Shape `protobuf:"bytes,1,opt,name=shape,proto3" json:"shape,omitempty"`
	// Type of the tensor values.
	Type    DataType  `protobuf:"varint,2,opt,name=type,proto3,enum=is.common.DataType" json:"type,omitempty"`
	Floats  []float32 `protobuf:"fixed32,3,rep,packed,name=floats,proto3" json:"floats,omitempty"`
	Doubles []float64 `protobuf:"fixed64,4,rep,packed,name=doubles,proto3" json:"doubles,omitempty"`
	Ints32  []int32   `protobuf:"varint,5,rep,packed,name=ints32,proto3" json:"ints32,omitempty"`
	Ints64  []int64   `protobuf:"varint,6,rep,packed,name=ints64,proto3" json:"ints64,omitempty"`
}

func (x *Tensor) Reset() {
	*x = Tensor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_is_utils_common_common_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tensor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tensor) ProtoMessage() {}

func (x *Tensor) ProtoReflect() protoreflect.Message {
	mi := &file_is_utils_common_common_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tensor.ProtoReflect.Descriptor instead.
func (*Tensor) Descriptor() ([]byte, []int) {
	return file_is_utils_common_common_proto_rawDescGZIP(), []int{4}
}

func (x *Tensor) GetShape() *Shape {
	if x != nil {
		return x.Shape
	}
	return nil
}

func (x *Tensor) GetType() DataType {
	if x != nil {
		return x.Type
	}
	return DataType_UNKNOWN_TYPE
}

func (x *Tensor) GetFloats() []float32 {
	if x != nil {
		return x.Floats
	}
	return nil
}

func (x *Tensor) GetDoubles() []float64 {
	if x != nil {
		return x.Doubles
	}
	return nil
}

func (x *Tensor) GetInts32() []int32 {
	if x != nil {
		return x.Ints32
	}
	return nil
}

func (x *Tensor) GetInts64() []int64 {
	if x != nil {
		return x.Ints64
	}
	return nil
}

type Position struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Position in the x axis.
	X float32 `protobuf:"fixed32,1,opt,name=x,proto3" json:"x,omitempty"`
	// Position in the y axis.
	Y float32 `protobuf:"fixed32,2,opt,name=y,proto3" json:"y,omitempty"`
	// Position in the z axis.
	Z float32 `protobuf:"fixed32,3,opt,name=z,proto3" json:"z,omitempty"`
}

func (x *Position) Reset() {
	*x = Position{}
	if protoimpl.UnsafeEnabled {
		mi := &file_is_utils_common_common_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Position) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Position) ProtoMessage() {}

func (x *Position) ProtoReflect() protoreflect.Message {
	mi := &file_is_utils_common_common_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Position.ProtoReflect.Descriptor instead.
func (*Position) Descriptor() ([]byte, []int) {
	return file_is_utils_common_common_proto_rawDescGZIP(), []int{5}
}

func (x *Position) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Position) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Position) GetZ() float32 {
	if x != nil {
		return x.Z
	}
	return 0
}

type Orientation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Rotation around x.
	Yaw float32 `protobuf:"fixed32,1,opt,name=yaw,proto3" json:"yaw,omitempty"`
	// Rotation around y.
	Pitch float32 `protobuf:"fixed32,2,opt,name=pitch,proto3" json:"pitch,omitempty"`
	// Rotation around z.
	Roll float32 `protobuf:"fixed32,3,opt,name=roll,proto3" json:"roll,omitempty"`
}

func (x *Orientation) Reset() {
	*x = Orientation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_is_utils_common_common_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Orientation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Orientation) ProtoMessage() {}

func (x *Orientation) ProtoReflect() protoreflect.Message {
	mi := &file_is_utils_common_common_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Orientation.ProtoReflect.Descriptor instead.
func (*Orientation) Descriptor() ([]byte, []int) {
	return file_is_utils_common_common_proto_rawDescGZIP(), []int{6}
}

func (x *Orientation) GetYaw() float32 {
	if x != nil {
		return x.Yaw
	}
	return 0
}

func (x *Orientation) GetPitch() float32 {
	if x != nil {
		return x.Pitch
	}
	return 0
}

func (x *Orientation) GetRoll() float32 {
	if x != nil {
		return x.Roll
	}
	return 0
}

type Pose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position    *Position    `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	Orientation *Orientation `protobuf:"bytes,2,opt,name=orientation,proto3" json:"orientation,omitempty"`
}

func (x *Pose) Reset() {
	*x = Pose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_is_utils_common_common_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pose) ProtoMessage() {}

func (x *Pose) ProtoReflect() protoreflect.Message {
	mi := &file_is_utils_common_common_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pose.ProtoReflect.Descriptor instead.
func (*Pose) Descriptor() ([]byte, []int) {
	return file_is_utils_common_common_proto_rawDescGZIP(), []int{7}
}

func (x *Pose) GetPosition() *Position {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *Pose) GetOrientation() *Orientation {
	if x != nil {
		return x.Orientation
	}
	return nil
}

type Speed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Linear  float32 `protobuf:"fixed32,1,opt,name=linear,proto3" json:"linear,omitempty"`
	Angular float32 `protobuf:"fixed32,2,opt,name=angular,proto3" json:"angular,omitempty"`
}

func (x *Speed) Reset() {
	*x = Speed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_is_utils_common_common_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Speed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Speed) ProtoMessage() {}

func (x *Speed) ProtoReflect() protoreflect.Message {
	mi := &file_is_utils_common_common_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Speed.ProtoReflect.Descriptor instead.
func (*Speed) Descriptor() ([]byte, []int) {
	return file_is_utils_common_common_proto_rawDescGZIP(), []int{8}
}

func (x *Speed) GetLinear() float32 {
	if x != nil {
		return x.Linear
	}
	return 0
}

func (x *Speed) GetAngular() float32 {
	if x != nil {
		return x.Angular
	}
	return 0
}

type ConsumerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of consumers.
	Consumers []string `protobuf:"bytes,2,rep,name=consumers,proto3" json:"consumers,omitempty"`
}

func (x *ConsumerInfo) Reset() {
	*x = ConsumerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_is_utils_common_common_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConsumerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumerInfo) ProtoMessage() {}

func (x *ConsumerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_is_utils_common_common_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsumerInfo.ProtoReflect.Descriptor instead.
func (*ConsumerInfo) Descriptor() ([]byte, []int) {
	return file_is_utils_common_common_proto_rawDescGZIP(), []int{9}
}

func (x *ConsumerInfo) GetConsumers() []string {
	if x != nil {
		return x.Consumers
	}
	return nil
}

type ConsumerList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Consumer Information for each topic.
	Info map[string]*ConsumerInfo `protobuf:"bytes,1,rep,name=info,proto3" json:"info,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ConsumerList) Reset() {
	*x = ConsumerList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_is_utils_common_common_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConsumerList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumerList) ProtoMessage() {}

func (x *ConsumerList) ProtoReflect() protoreflect.Message {
	mi := &file_is_utils_common_common_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsumerList.ProtoReflect.Descriptor instead.
func (*ConsumerList) Descriptor() ([]byte, []int) {
	return file_is_utils_common_common_proto_rawDescGZIP(), []int{10}
}

func (x *ConsumerList) GetInfo() map[string]*ConsumerInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type Phrase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of words.
	Content []string `protobuf:"bytes,1,rep,name=content,proto3" json:"content,omitempty"`
	// Confidence of recognized phrase.
	Confidence float32 `protobuf:"fixed32,2,opt,name=confidence,proto3" json:"confidence,omitempty"`
	// Identifies language using Locale Name pattern.
	Language string `protobuf:"bytes,3,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *Phrase) Reset() {
	*x = Phrase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_is_utils_common_common_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Phrase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Phrase) ProtoMessage() {}

func (x *Phrase) ProtoReflect() protoreflect.Message {
	mi := &file_is_utils_common_common_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Phrase.ProtoReflect.Descriptor instead.
func (*Phrase) Descriptor() ([]byte, []int) {
	return file_is_utils_common_common_proto_rawDescGZIP(), []int{11}
}

func (x *Phrase) GetContent() []string {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *Phrase) GetConfidence() float32 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

func (x *Phrase) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type Shape_Dimension struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Number of elements in this dimension.
	Size int32 `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	// Dimension identifier. This can be used to indicate the order that the dimensions are
	//placed in a tensor. For instance, in a tensor with two dimensions (matrix) the name can be
	//something like "row" or "collumn" indicating if the memory layout is row or collumn major.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Shape_Dimension) Reset() {
	*x = Shape_Dimension{}
	if protoimpl.UnsafeEnabled {
		mi := &file_is_utils_common_common_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Shape_Dimension) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Shape_Dimension) ProtoMessage() {}

func (x *Shape_Dimension) ProtoReflect() protoreflect.Message {
	mi := &file_is_utils_common_common_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Shape_Dimension.ProtoReflect.Descriptor instead.
func (*Shape_Dimension) Descriptor() ([]byte, []int) {
	return file_is_utils_common_common_proto_rawDescGZIP(), []int{3, 0}
}

func (x *Shape_Dimension) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Shape_Dimension) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_is_utils_common_common_proto protoreflect.FileDescriptor

var file_is_utils_common_common_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x69, 0x73, 0x2f, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09,
	0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70,
	0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x80, 0x01, 0x0a, 0x10, 0x53, 0x61,
	0x6d, 0x70, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x39,
	0x0a, 0x09, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09,
	0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x64, 0x65, 0x6c,
	0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x22, 0x62, 0x0a, 0x0b,
	0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x37, 0x0a, 0x08, 0x73, 0x61, 0x6d, 0x70, 0x6c,
	0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x69, 0x73, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x69, 0x6e, 0x67,
	0x22, 0x27, 0x0a, 0x0d, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x6c, 0x0a, 0x05, 0x53, 0x68, 0x61,
	0x70, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x69, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x68, 0x61,
	0x70, 0x65, 0x2e, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x64, 0x69,
	0x6d, 0x73, 0x1a, 0x33, 0x0a, 0x09, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xcb, 0x01, 0x0a, 0x06, 0x54, 0x65, 0x6e, 0x73,
	0x6f, 0x72, 0x12, 0x26, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x68,
	0x61, 0x70, 0x65, 0x52, 0x05, 0x73, 0x68, 0x61, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x69, 0x73, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x06, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x02, 0x42, 0x02, 0x10, 0x01, 0x52, 0x06, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x73, 0x12,
	0x1c, 0x0a, 0x07, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x01,
	0x42, 0x02, 0x10, 0x01, 0x52, 0x07, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x1a, 0x0a,
	0x06, 0x69, 0x6e, 0x74, 0x73, 0x33, 0x32, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x42, 0x02, 0x10,
	0x01, 0x52, 0x06, 0x69, 0x6e, 0x74, 0x73, 0x33, 0x32, 0x12, 0x1a, 0x0a, 0x06, 0x69, 0x6e, 0x74,
	0x73, 0x36, 0x34, 0x18, 0x06, 0x20, 0x03, 0x28, 0x03, 0x42, 0x02, 0x10, 0x01, 0x52, 0x06, 0x69,
	0x6e, 0x74, 0x73, 0x36, 0x34, 0x22, 0x34, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x78, 0x12,
	0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x79, 0x12, 0x0c, 0x0a,
	0x01, 0x7a, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x7a, 0x22, 0x49, 0x0a, 0x0b, 0x4f,
	0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x79, 0x61,
	0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x79, 0x61, 0x77, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x69, 0x74, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x69, 0x74,
	0x63, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x04, 0x72, 0x6f, 0x6c, 0x6c, 0x22, 0x71, 0x0a, 0x04, 0x50, 0x6f, 0x73, 0x65, 0x12, 0x2f,
	0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x38, 0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x4f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x6f, 0x72,
	0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x39, 0x0a, 0x05, 0x53, 0x70, 0x65,
	0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x06, 0x6c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6e,
	0x67, 0x75, 0x6c, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x61, 0x6e, 0x67,
	0x75, 0x6c, 0x61, 0x72, 0x22, 0x2c, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65,
	0x72, 0x73, 0x22, 0x97, 0x01, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x1a, 0x50, 0x0a, 0x09, 0x49, 0x6e,
	0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x69, 0x73, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x5e, 0x0a, 0x06,
	0x50, 0x68, 0x72, 0x61, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x2a, 0x5d, 0x0a, 0x08,
	0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x4c,
	0x4f, 0x41, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x4f,
	0x55, 0x42, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x49,
	0x4e, 0x54, 0x33, 0x32, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x49,
	0x4e, 0x54, 0x36, 0x34, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x04, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_is_utils_common_common_proto_rawDescOnce sync.Once
	file_is_utils_common_common_proto_rawDescData = file_is_utils_common_common_proto_rawDesc
)

func file_is_utils_common_common_proto_rawDescGZIP() []byte {
	file_is_utils_common_common_proto_rawDescOnce.Do(func() {
		file_is_utils_common_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_is_utils_common_common_proto_rawDescData)
	})
	return file_is_utils_common_common_proto_rawDescData
}

var file_is_utils_common_common_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_is_utils_common_common_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_is_utils_common_common_proto_goTypes = []interface{}{
	(DataType)(0),                 // 0: is.common.DataType
	(*SamplingSettings)(nil),      // 1: is.common.SamplingSettings
	(*SyncRequest)(nil),           // 2: is.common.SyncRequest
	(*FieldSelector)(nil),         // 3: is.common.FieldSelector
	(*Shape)(nil),                 // 4: is.common.Shape
	(*Tensor)(nil),                // 5: is.common.Tensor
	(*Position)(nil),              // 6: is.common.Position
	(*Orientation)(nil),           // 7: is.common.Orientation
	(*Pose)(nil),                  // 8: is.common.Pose
	(*Speed)(nil),                 // 9: is.common.Speed
	(*ConsumerInfo)(nil),          // 10: is.common.ConsumerInfo
	(*ConsumerList)(nil),          // 11: is.common.ConsumerList
	(*Phrase)(nil),                // 12: is.common.Phrase
	(*Shape_Dimension)(nil),       // 13: is.common.Shape.Dimension
	nil,                           // 14: is.common.ConsumerList.InfoEntry
	(*wrapperspb.FloatValue)(nil), // 15: google.protobuf.FloatValue
}
var file_is_utils_common_common_proto_depIdxs = []int32{
	15, // 0: is.common.SamplingSettings.frequency:type_name -> google.protobuf.FloatValue
	15, // 1: is.common.SamplingSettings.delay:type_name -> google.protobuf.FloatValue
	1,  // 2: is.common.SyncRequest.sampling:type_name -> is.common.SamplingSettings
	13, // 3: is.common.Shape.dims:type_name -> is.common.Shape.Dimension
	4,  // 4: is.common.Tensor.shape:type_name -> is.common.Shape
	0,  // 5: is.common.Tensor.type:type_name -> is.common.DataType
	6,  // 6: is.common.Pose.position:type_name -> is.common.Position
	7,  // 7: is.common.Pose.orientation:type_name -> is.common.Orientation
	14, // 8: is.common.ConsumerList.info:type_name -> is.common.ConsumerList.InfoEntry
	10, // 9: is.common.ConsumerList.InfoEntry.value:type_name -> is.common.ConsumerInfo
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_is_utils_common_common_proto_init() }
func file_is_utils_common_common_proto_init() {
	if File_is_utils_common_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_is_utils_common_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SamplingSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_is_utils_common_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_is_utils_common_common_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldSelector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_is_utils_common_common_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Shape); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_is_utils_common_common_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tensor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_is_utils_common_common_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Position); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_is_utils_common_common_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Orientation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_is_utils_common_common_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_is_utils_common_common_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Speed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_is_utils_common_common_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConsumerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_is_utils_common_common_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConsumerList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_is_utils_common_common_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Phrase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_is_utils_common_common_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Shape_Dimension); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_is_utils_common_common_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_is_utils_common_common_proto_goTypes,
		DependencyIndexes: file_is_utils_common_common_proto_depIdxs,
		EnumInfos:         file_is_utils_common_common_proto_enumTypes,
		MessageInfos:      file_is_utils_common_common_proto_msgTypes,
	}.Build()
	File_is_utils_common_common_proto = out.File
	file_is_utils_common_common_proto_rawDesc = nil
	file_is_utils_common_common_proto_goTypes = nil
	file_is_utils_common_common_proto_depIdxs = nil
}
