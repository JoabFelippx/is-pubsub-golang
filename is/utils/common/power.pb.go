// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: is/utils/common/power.proto

package is_common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PowerInfo_BatteryType int32

const (
	PowerInfo_PB   PowerInfo_BatteryType = 0
	PowerInfo_NICD PowerInfo_BatteryType = 1
	PowerInfo_NIMH PowerInfo_BatteryType = 2
	PowerInfo_LIPO PowerInfo_BatteryType = 3
)

// Enum value maps for PowerInfo_BatteryType.
var (
	PowerInfo_BatteryType_name = map[int32]string{
		0: "PB",
		1: "NICD",
		2: "NIMH",
		3: "LIPO",
	}
	PowerInfo_BatteryType_value = map[string]int32{
		"PB":   0,
		"NICD": 1,
		"NIMH": 2,
		"LIPO": 3,
	}
)

func (x PowerInfo_BatteryType) Enum() *PowerInfo_BatteryType {
	p := new(PowerInfo_BatteryType)
	*p = x
	return p
}

func (x PowerInfo_BatteryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PowerInfo_BatteryType) Descriptor() protoreflect.EnumDescriptor {
	return file_is_utils_common_power_proto_enumTypes[0].Descriptor()
}

func (PowerInfo_BatteryType) Type() protoreflect.EnumType {
	return &file_is_utils_common_power_proto_enumTypes[0]
}

func (x PowerInfo_BatteryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PowerInfo_BatteryType.Descriptor instead.
func (PowerInfo_BatteryType) EnumDescriptor() ([]byte, []int) {
	return file_is_utils_common_power_proto_rawDescGZIP(), []int{0, 0}
}

type PowerInfo_BatteryStatus int32

const (
	PowerInfo_UNKNOWN       PowerInfo_BatteryStatus = 0
	PowerInfo_CHARGING      PowerInfo_BatteryStatus = 1
	PowerInfo_DISCHARGING   PowerInfo_BatteryStatus = 2
	PowerInfo_CHARGED       PowerInfo_BatteryStatus = 3
	PowerInfo_NOT_CONNECTED PowerInfo_BatteryStatus = 4
)

// Enum value maps for PowerInfo_BatteryStatus.
var (
	PowerInfo_BatteryStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "CHARGING",
		2: "DISCHARGING",
		3: "CHARGED",
		4: "NOT_CONNECTED",
	}
	PowerInfo_BatteryStatus_value = map[string]int32{
		"UNKNOWN":       0,
		"CHARGING":      1,
		"DISCHARGING":   2,
		"CHARGED":       3,
		"NOT_CONNECTED": 4,
	}
)

func (x PowerInfo_BatteryStatus) Enum() *PowerInfo_BatteryStatus {
	p := new(PowerInfo_BatteryStatus)
	*p = x
	return p
}

func (x PowerInfo_BatteryStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PowerInfo_BatteryStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_is_utils_common_power_proto_enumTypes[1].Descriptor()
}

func (PowerInfo_BatteryStatus) Type() protoreflect.EnumType {
	return &file_is_utils_common_power_proto_enumTypes[1]
}

func (x PowerInfo_BatteryStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PowerInfo_BatteryStatus.Descriptor instead.
func (PowerInfo_BatteryStatus) EnumDescriptor() ([]byte, []int) {
	return file_is_utils_common_power_proto_rawDescGZIP(), []int{0, 1}
}

type PowerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Voltage         float32                 `protobuf:"fixed32,1,opt,name=voltage,proto3" json:"voltage,omitempty"`                                        // Battery voltage in volts
	TerminalVoltage float32                 `protobuf:"fixed32,2,opt,name=terminal_voltage,json=terminalVoltage,proto3" json:"terminal_voltage,omitempty"` // Lower voltage limit
	CellVoltage     []float32               `protobuf:"fixed32,3,rep,packed,name=cell_voltage,json=cellVoltage,proto3" json:"cell_voltage,omitempty"`      // When battery contain cells, voltage of each one
	Charge          float32                 `protobuf:"fixed32,4,opt,name=charge,proto3" json:"charge,omitempty"`                                          // Charge percentage on 0 to 1 range
	Capacity        float32                 `protobuf:"fixed32,5,opt,name=capacity,proto3" json:"capacity,omitempty"`                                      // Capacity in Ah
	Type            PowerInfo_BatteryType   `protobuf:"varint,6,opt,name=type,proto3,enum=is.common.PowerInfo_BatteryType" json:"type,omitempty"`          // Battery type
	Status          PowerInfo_BatteryStatus `protobuf:"varint,7,opt,name=status,proto3,enum=is.common.PowerInfo_BatteryStatus" json:"status,omitempty"`    // Battery status
	Uptime          *durationpb.Duration    `protobuf:"bytes,8,opt,name=uptime,proto3" json:"uptime,omitempty"`
	// How long the battery will last at the current discharge rate
	Autonomy *durationpb.Duration `protobuf:"bytes,9,opt,name=autonomy,proto3" json:"autonomy,omitempty"`
}

func (x *PowerInfo) Reset() {
	*x = PowerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_is_utils_common_power_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PowerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PowerInfo) ProtoMessage() {}

func (x *PowerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_is_utils_common_power_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PowerInfo.ProtoReflect.Descriptor instead.
func (*PowerInfo) Descriptor() ([]byte, []int) {
	return file_is_utils_common_power_proto_rawDescGZIP(), []int{0}
}

func (x *PowerInfo) GetVoltage() float32 {
	if x != nil {
		return x.Voltage
	}
	return 0
}

func (x *PowerInfo) GetTerminalVoltage() float32 {
	if x != nil {
		return x.TerminalVoltage
	}
	return 0
}

func (x *PowerInfo) GetCellVoltage() []float32 {
	if x != nil {
		return x.CellVoltage
	}
	return nil
}

func (x *PowerInfo) GetCharge() float32 {
	if x != nil {
		return x.Charge
	}
	return 0
}

func (x *PowerInfo) GetCapacity() float32 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

func (x *PowerInfo) GetType() PowerInfo_BatteryType {
	if x != nil {
		return x.Type
	}
	return PowerInfo_PB
}

func (x *PowerInfo) GetStatus() PowerInfo_BatteryStatus {
	if x != nil {
		return x.Status
	}
	return PowerInfo_UNKNOWN
}

func (x *PowerInfo) GetUptime() *durationpb.Duration {
	if x != nil {
		return x.Uptime
	}
	return nil
}

func (x *PowerInfo) GetAutonomy() *durationpb.Duration {
	if x != nil {
		return x.Autonomy
	}
	return nil
}

var File_is_utils_common_power_proto protoreflect.FileDescriptor

var file_is_utils_common_power_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x69, 0x73, 0x2f, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x69,
	0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x95, 0x04, 0x0a, 0x09, 0x50, 0x6f, 0x77,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x6f, 0x6c, 0x74, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x76, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65,
	0x12, 0x29, 0x0a, 0x10, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x76, 0x6f, 0x6c,
	0x74, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x74, 0x65, 0x72, 0x6d,
	0x69, 0x6e, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x65, 0x6c, 0x6c, 0x5f, 0x76, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x02, 0x52, 0x0b, 0x63, 0x65, 0x6c, 0x6c, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06,
	0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69,
	0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69,
	0x74, 0x79, 0x12, 0x34, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x20, 0x2e, 0x69, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x77,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x69, 0x73, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x42,
	0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x06, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x06, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x6f, 0x6e,
	0x6f, 0x6d, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x61, 0x75, 0x74, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x22, 0x33,
	0x0a, 0x0b, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x06, 0x0a,
	0x02, 0x50, 0x42, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x49, 0x43, 0x44, 0x10, 0x01, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x49, 0x4d, 0x48, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x49, 0x50,
	0x4f, 0x10, 0x03, 0x22, 0x5b, 0x0a, 0x0d, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10,
	0x00, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x48, 0x41, 0x52, 0x47, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12,
	0x0f, 0x0a, 0x0b, 0x44, 0x49, 0x53, 0x43, 0x48, 0x41, 0x52, 0x47, 0x49, 0x4e, 0x47, 0x10, 0x02,
	0x12, 0x0b, 0x0a, 0x07, 0x43, 0x48, 0x41, 0x52, 0x47, 0x45, 0x44, 0x10, 0x03, 0x12, 0x11, 0x0a,
	0x0d, 0x4e, 0x4f, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x04,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_is_utils_common_power_proto_rawDescOnce sync.Once
	file_is_utils_common_power_proto_rawDescData = file_is_utils_common_power_proto_rawDesc
)

func file_is_utils_common_power_proto_rawDescGZIP() []byte {
	file_is_utils_common_power_proto_rawDescOnce.Do(func() {
		file_is_utils_common_power_proto_rawDescData = protoimpl.X.CompressGZIP(file_is_utils_common_power_proto_rawDescData)
	})
	return file_is_utils_common_power_proto_rawDescData
}

var file_is_utils_common_power_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_is_utils_common_power_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_is_utils_common_power_proto_goTypes = []interface{}{
	(PowerInfo_BatteryType)(0),   // 0: is.common.PowerInfo.BatteryType
	(PowerInfo_BatteryStatus)(0), // 1: is.common.PowerInfo.BatteryStatus
	(*PowerInfo)(nil),            // 2: is.common.PowerInfo
	(*durationpb.Duration)(nil),  // 3: google.protobuf.Duration
}
var file_is_utils_common_power_proto_depIdxs = []int32{
	0, // 0: is.common.PowerInfo.type:type_name -> is.common.PowerInfo.BatteryType
	1, // 1: is.common.PowerInfo.status:type_name -> is.common.PowerInfo.BatteryStatus
	3, // 2: is.common.PowerInfo.uptime:type_name -> google.protobuf.Duration
	3, // 3: is.common.PowerInfo.autonomy:type_name -> google.protobuf.Duration
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_is_utils_common_power_proto_init() }
func file_is_utils_common_power_proto_init() {
	if File_is_utils_common_power_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_is_utils_common_power_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PowerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_is_utils_common_power_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_is_utils_common_power_proto_goTypes,
		DependencyIndexes: file_is_utils_common_power_proto_depIdxs,
		EnumInfos:         file_is_utils_common_power_proto_enumTypes,
		MessageInfos:      file_is_utils_common_power_proto_msgTypes,
	}.Build()
	File_is_utils_common_power_proto = out.File
	file_is_utils_common_power_proto_rawDesc = nil
	file_is_utils_common_power_proto_goTypes = nil
	file_is_utils_common_power_proto_depIdxs = nil
}
